
Команды Git

# Установка имени пользователя
	git config user.name some_name

# Установка email пользователя
	git config user.email example@mail.test

# Инициализация GITa
	git init 

# Добавление файла, папки
	git add . 		#просто точка означает, что добавляем все файлы
	git add index.html 	# добавление конкретного файла
	git add css/style.css   # добавление папки | или файла из папки
	git add *.html (*.txt)  # добавление всех файлов с определенным расширением
	git add css/*.txt 	# добавление из определенной папки всех файлов с выбранным расширением
	git add css/**/*.jpeg   # добавление из всех подпапок всех файлов с выбранным расширением
	git add !css/style.css  #добавить все файлы, кроме определенного

# Просмотр статуса
	git status # показывает какие файлы находятся в состоянии ожидания для загрузки

# Удаление файлов|папок из статуса ожидания
	git rm --cashed файл.html
	git rm --cashed папка/

# Окончательное добавление
	git commit -m "Сюда писать Комментарии, что добавили/изменили" # Добавили все файлы в локальное хранилище КОММЕНТАРИИ!!!

# Просмотр списков Commit 
	git log 	  # подробный отчет
	git log --oneline # сокращенный отчет в одну линию

# ДОбавить файл .gitignore
	.gitignore # в этот файл можно записать файлы которые не будут закоммичиваться при любых добавлениях add
		index.html # определенный файл
		css/       # вся папка
		css/*.jpeg # игнорирование всех файло с раширением "jpeg", которые находятся в папке css/
		
# Просмотр истории Commit и как было раньше на определенном коммите. СНачала команду git log --oneline
	git checkout ID Коммита 	# переход к версии до выбранного Коммита
	git checkout master		# возврат к текущей версии
	git revert ID Коммита		# отмена определенного Коммита, не удаление
			  	:wq	# выход из checkout
 	git reset ID Коммита --hard 	# удаление всех Коммитов до выбранного
	
# ВЕТКИ
	git branch New_name		# создание новой ветки
	git checkout -b Second_name	# тоже способ создания новой ветки, но при этом сразу переходишь в нее
	git status			# просмотр на какой ветке находимся
	git checkout New_name		# переход на другую ветку
	git branch -a			# просмотр всех веток
			* и зеленый цвет ветка на которой сейчас находишься
	# После создания новой ветки:
			1. необходимо создать файлы или добавить из вне
			2. добавить в локальный репозиторий git add .
			3. закоммитить git status --> git commit -m "Комментарии"
	# При переходе с одной ветки на другую коммандой -- git branch master -- новая добавленная папка не видна
	
	# Чтобы объединить все ветки --> Перейти на главную ветку master (git checkout master)
				     --> git merge New_name # происходит объединение главной ветки с другой выбранной
				     
# GIT HUB
	# подключение к удаленному репозиторию
		git remote add origin https://
	# проверить подключен или нет
		git remote
	
	# добавление файлов в репозиторий
		git push -u origin master # можно указать любую другую ветку New_name, Second_name
	если появились/изменились файлы, то сначала нужно добавить их в локальный репозиторий
		git add .  -->  git commit -m "Комментарии"  -->  git push -u origin master
	



